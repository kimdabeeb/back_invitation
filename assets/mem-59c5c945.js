import{g as p}from"./camelcase-35484e94.js";import{m as l}from"./mimic-fn-4c5af2e5.js";import{d}from"./map-age-cleaner-ae966f8d.js";const w=l,h=d,i=new WeakMap,f=new WeakMap,c=(o,{cacheKey:t,cache:n=new Map,maxAge:e}={})=>{typeof e=="number"&&h(n);const r=function(...a){const s=t?t(a):a[0],m=n.get(s);if(m)return m.data;const u=o.apply(this,a);return n.set(s,{data:u,maxAge:e?Date.now()+e:Number.POSITIVE_INFINITY}),u};return w(r,o,{ignoreNonConfigurable:!0}),f.set(r,n),r};c.decorator=(o={})=>(t,n,e)=>{const r=t[n];if(typeof r!="function")throw new TypeError("The decorated value must be a function");delete e.value,delete e.writable,e.get=function(){if(!i.has(this)){const a=c(r,o);return i.set(this,a),a}return i.get(this)}};c.clear=o=>{const t=f.get(o);if(!t)throw new TypeError("Can't clear a function that was not memoized!");if(typeof t.clear!="function")throw new TypeError("The cache Map can't be cleared!");t.clear()};var y=c;const g=p(y);export{g as m};
