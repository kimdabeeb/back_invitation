const i=(e,t,n,o)=>{if(n==="length"||n==="prototype"||n==="arguments"||n==="caller")return;const r=Object.getOwnPropertyDescriptor(e,n),c=Object.getOwnPropertyDescriptor(t,n);!a(r,c)&&o||Object.defineProperty(e,n,c)},a=function(e,t){return e===void 0||e.configurable||e.writable===t.writable&&e.enumerable===t.enumerable&&e.configurable===t.configurable&&(e.writable||e.value===t.value)},g=(e,t)=>{const n=Object.getPrototypeOf(t);n!==Object.getPrototypeOf(e)&&Object.setPrototypeOf(e,n)},u=(e,t)=>`/* Wrapped ${e}*/
${t}`,b=Object.getOwnPropertyDescriptor(Function.prototype,"toString"),l=Object.getOwnPropertyDescriptor(Function.prototype.toString,"name"),s=(e,t,n)=>{const o=n===""?"":`with ${n.trim()}() `,r=u.bind(null,o,t.toString());Object.defineProperty(r,"name",l),Object.defineProperty(e,"toString",{...b,value:r})},O=(e,t,{ignoreNonConfigurable:n=!1}={})=>{const{name:o}=e;for(const r of Reflect.ownKeys(t))i(e,t,r,n);return g(e,t),s(e,t,o),e};var f=O;export{f as m};
